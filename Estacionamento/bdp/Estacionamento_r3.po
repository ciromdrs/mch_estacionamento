THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(72) & WellDefinedness_indicar.2,(_f(115) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(72) & WellDefinedness_indicar.1,(_f(115) & _f(89) => _f(116));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.16,(_f(102) & _f(107) & _f(103) & _f(104) & _f(89) => _f(97));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.15,(_f(89) => _f(114));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.14,(_f(102) & _f(107) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.13,(_f(102) & _f(107) & _f(89) => _f(109));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.12,(_f(89) => _f(113));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.11,(_f(102) & _f(106) & _f(103) & _f(104) & _f(89) => _f(97));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.10,(_f(89) => _f(112));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.9,(_f(102) & _f(106) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.8,(_f(102) & _f(106) & _f(89) => _f(109));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.7,(_f(89) => _f(111));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.6,(_f(102) & _f(101) & _f(103) & _f(104) & _f(89) => _f(97));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.5,(_f(89) => _f(110));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.4,(_f(102) & _f(101) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.3,(_f(102) & _f(101) & _f(89) => _f(109));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.2,(_f(102) & _f(89) => _f(99));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(64) & WellDefinedness_get_info_painel.1,(_f(89) => _f(108));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(100) & WellDefinedness_get_tipo_vaga.2,(_f(89) => _f(99));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(100) & WellDefinedness_get_tipo_vaga.1,(_f(89) => _f(98));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_get_tipo_vaga.2,(_f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_get_tipo_vaga.1,(_f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(95) & WellDefinedness_get_cor_lampada.4,(_f(52) & _f(89) => _f(99));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(95) & WellDefinedness_get_cor_lampada.3,(_f(52) & _f(89) => _f(98));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(95) & WellDefinedness_get_cor_lampada.2,(_f(89) => _f(97));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(95) & WellDefinedness_get_cor_lampada.1,(_f(89) => _f(96));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_get_cor_lampada.2,(_f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_get_cor_lampada.1,(_f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_liberar.2,(_f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_liberar.1,(_f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_ocupar.2,(_f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_ocupar.1,(_f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_excluir.2,(_f(27) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & WellDefinedness_Precondition_excluir.1,(_f(27) & _f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(86) & WellDefinedness_criar.2,(_f(4) & _f(88) & _f(87) & _f(89) => _f(91));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(86) & WellDefinedness_criar.1,(_f(4) & _f(88) & _f(87) & _f(89) => _f(90));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(73) & indicar.2,(_f(74) & _f(75) => _f(77));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(73) & indicar.1,(_f(74) & _f(75) => _f(76));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.6,(_f(5) => _f(71));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.5,(_f(5) => _f(70));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.4,(_f(5) => _f(69));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.3,(_f(5) => _f(68));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.2,(_f(5) => _f(67));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(65) & get_info_painel.1,(_f(5) => _f(66));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(62) & get_tipo_vaga.2,(_f(5) => _f(63));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(61) & get_tipo_vaga.1,(_f(13) => _f(28));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.8,(_f(53) & _f(46) => _f(60));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.7,(_f(52) & _f(50) & _f(51) & _f(47) & _f(5) => _f(59));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.6,(_f(52) & _f(50) & _f(51) & _f(46) => _f(58));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.5,(_f(52) & _f(49) & _f(47) & _f(5) => _f(57));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.4,(_f(52) & _f(49) & _f(46) => _f(56));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.3,(_f(52) & _f(48) & _f(47) & _f(5) => _f(55));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(45) & get_cor_lampada.2,(_f(52) & _f(48) & _f(46) => _f(54));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(44) & get_cor_lampada.1,(_f(13) => _f(28));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(41) & liberar.3,(_f(5) & _f(34) => _f(43));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(41) & liberar.2,(_f(5) & _f(22) => _f(42));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(41) & liberar.1,(_f(13) => _f(28));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(38) & ocupar.3,(_f(5) & _f(34) => _f(40));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(38) & ocupar.2,(_f(5) & _f(22) => _f(39));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(38) & ocupar.1,(_f(13) => _f(28));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.8,(_f(5) & _f(36) => _f(37));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.7,(_f(5) & _f(34) => _f(35));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.6,(_f(5) & _f(32) => _f(33));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.5,(_f(5) & _f(24) => _f(31));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.4,(_f(5) & _f(22) => _f(30));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.3,(_f(5) & _f(8) => _f(29));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.2,(_f(13) => _f(28));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(26) & excluir.1,(_f(13) => _f(27));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.6,(_f(15) & _f(16) & _f(17) & _f(18) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.5,(_f(15) & _f(16) & _f(17) & _f(18) & _f(22) => _f(23));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.4,(_f(15) & _f(16) & _f(17) & _f(18) & _f(8) => _f(21));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.3,(_f(15) & _f(16) & _f(17) & _f(18) & _f(6) => _f(20));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.2,(_f(15) & _f(16) & _f(17) & _f(18) => _f(19));
_f(1) & _f(2) & _f(3) & _f(10) & _f(11) & _f(12) & criar.1,(_f(13) => _f(14));
_f(1) & _f(2) & _f(3) & Initialisation.2,(_f(4) & _f(5) & _f(8) => _f(9));
_f(1) & _f(2) & _f(3) & Initialisation.1,(_f(4) & _f(5) & _f(6) => _f(7))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..4)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..4)*{TIPOS}) = {}) & ((1..3)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..3)*{STATUS}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & ((1..2)*{SIM_NAO}): FIN(NATURAL*{SIM_NAO}) & not(((1..2)*{SIM_NAO}) = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000)) & MAX : ((1..4)*{TIPOS}) +-> ((0) .. (MAX_INT)) & dom(MAX) = ((1..4)*{TIPOS}) & ((MAX) : (((((1..4)*{TIPOS})) --> (((0) .. (MAX_INT)))))) & ((((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS))) <= MAX_INT);
VAGAS: FIN(INTEGER) & not(VAGAS = {});
((vv) : (VAGAS));
"Refinement is correct";
"Check invariant ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS))))";
(((((1) .. (MAX_INT)) * {vv})) : (((((1) .. (MAX_INT))) --> (VAGAS))));
"Check invariant ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))))";
((dom({})) = (ran((((((1) .. (MAX_INT)) * {vv})) |> (dom((((VAGAS * {FALSE})) |> ({TRUE}))))))));
ativo : VAGAS +-> BOOL & dom(ativo) = VAGAS & ((ativo) : (((VAGAS) --> (BOOL)))) & ((card(((ativo) |> ({TRUE})))) = (cv)) & ((dom(((ativo) |> ({TRUE})))) = (dom(tipo))) & ((dom(((ativo) |> ({TRUE})))) = (dom(status))) & ((cv) : (((0) .. (MAX_INT)))) & ((cv) = (card(tipo))) & ((cv) = (card(status))) & (cv <= (((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS)))) & ((status) : (((VAGAS) +-> (((1..3)*{STATUS}))))) & ((tipo) : (((VAGAS) +-> (((1..4)*{TIPOS}))))) & ((dom(status)) = (dom(tipo))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (MAX )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (MAX )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (MAX )((2|->TIPOS)));
ids$1 : ((1) .. (MAX_INT)) +-> VAGAS & dom(ids$1) = ((1) .. (MAX_INT)) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1));
(cv +1 <= MAX_INT) & (cv +1 <= MAX_INT) & ((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
"Precondition can be deduced";
(cv$1 +1 <= MAX_INT);
((vv$1) : (VAGAS));
not(vv$1 : dom(tipo$1));
not(vv$1 : dom(status$1));
(((ativo$1 )(vv$1)) = (FALSE));
#(vv).(((vv) : (VAGAS)) & not(vv : dom(tipo)) & not(vv : dom(status)) & (((ativo )(vv)) = (FALSE)) & ((((tipo) <+ ({((vv) |-> (tt))}))) = (((tipo$1) <+ ({((vv$1) |-> (tt))})))) & ((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))) & ((((ativo) <+ ({((vv) |-> (TRUE))}))) = (((ativo$1) <+ ({((vv$1) |-> (TRUE))})))));
((((ids$1) <+ ({(((cv$1 + 1)) |-> (vv$1))}))) : (((((1) .. (MAX_INT))) --> (VAGAS))));
((dom(((tipo$1) <+ ({((vv$1) |-> (tt))})))) = (ran(((((ids$1) <+ ({(((cv$1 + 1)) |-> (vv$1))}))) |> (dom(((((ativo$1) <+ ({((vv$1) |-> (TRUE))}))) |> ({TRUE}))))))));
"Check invariant ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))))";
((dom(((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))) = (ran(((((ids$1) <+ ({(((cv$1 + 1)) |-> (vv$1))}))) |> (dom(((((ativo$1) <+ ({((vv$1) |-> (TRUE))}))) |> ({TRUE}))))))));
"Check invariant ((cv) = (cv$1))";
(((cv + 1)) = ((cv$1 + 1)));
(0 +1 <= cv) & (((ativo )(vv)) = (TRUE)) & (0 +1 <= cv) & ((vv) : (VAGAS)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
(0 +1 <= cv$1);
(((ativo$1 )(vv)) = (TRUE));
((dom((({vv}) <<| (tipo$1)))) = (ran(((ids$1) |> (dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE}))))))));
((dom((({vv}) <<| (status$1)))) = (ran(((ids$1) |> (dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE}))))))));
(((cv - 1)) = ((cv$1 - 1)));
"Check invariant ((tipo) = (tipo$1))";
(((({vv}) <<| (tipo))) = ((({vv}) <<| (tipo$1))));
"Check invariant ((status) = (status$1))";
(((({vv}) <<| (status))) = ((({vv}) <<| (status$1))));
"Check invariant ((ativo) = (ativo$1))";
((((ativo) <+ ({((vv) |-> (FALSE))}))) = (((ativo$1) <+ ({((vv) |-> (FALSE))}))));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((dom(((status$1) <+ ({((vv) |-> ((2|->STATUS)))})))) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))));
((((status) <+ ({((vv) |-> ((2|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((2|->STATUS)))}))));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS)));
((dom(((status$1) <+ ({((vv) |-> ((1|->STATUS)))})))) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))));
((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((1|->STATUS)))}))));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES})));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES}))) & ((cc) = (cc$1));
(((status )(vv)) = ((1|->STATUS)));
not((((status )(vv)) = ((1|->STATUS))));
(((tipo$1 )(vv)) = ((1|->TIPOS)));
(((tipo$1 )(vv)) = ((2|->TIPOS)));
not((((tipo$1 )(vv)) = ((1|->TIPOS))));
not((((tipo$1 )(vv)) = ((2|->TIPOS))));
(((status$1 )(vv)) = ((1|->STATUS)));
not((((status$1 )(vv)) = ((1|->STATUS))));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((1|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((2|->CORES)) = ((1|->CORES))));
(((4|->CORES)) = ((1|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((1|->CORES)) = ((2|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((2|->CORES)) = ((2|->CORES))));
(((4|->CORES)) = ((2|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((1|->CORES)) = ((3|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((2|->CORES)) = ((3|->CORES))));
(((4|->CORES)) = ((3|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((1|->CORES)) = ((4|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS)))) & ((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE})))))))) & ((cv) = (cv$1)) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & ((ativo) = (ativo$1)) & (((2|->CORES)) = ((4|->CORES))));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS})));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS}))) & ((tt) = (tt$1));
(((tipo )(vv)) = ((tipo$1 )(vv)));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT)) & ((qc) = (qc$1)) & ((oc) = (oc$1)) & ((qi) = (qi$1)) & ((oi) = (oi$1)) & ((qd) = (qd$1)) & ((od) = (od$1));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & (((ativo )(zz)) = (TRUE)) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & (((ativo )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & (((ativo )(zz)) = (TRUE)) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & (((ativo )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & (((ativo )(zz)) = (TRUE)) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & (((ativo )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((vv) : (VAGAS)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((vv) : (VAGAS)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))) & ((vv) = (vv$1));
((uu$1) : (dom(((((dom(((tipo$1) |> ({tt})))) <| (status$1))) |> ({(1|->STATUS)})))));
(((ativo$1 )(uu$1)) = (TRUE));
((uu$1) : (dom(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))));
(((ativo )(uu$1)) = (TRUE));
((status) = (status$1));
((tipo) = (tipo$1));
((cv) = (cv$1));
((dom(status$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))));
((dom(tipo$1)) = (ran(((ids$1) |> (dom(((ativo$1) |> ({TRUE}))))))));
ids$1 : ((1) .. (MAX_INT)) +-> VAGAS;
dom(ids$1) = ((1) .. (MAX_INT));
((ids$1) : (((((1) .. (MAX_INT))) --> (VAGAS))));
(cv +1 <= MAX_INT) & (cv +1 <= MAX_INT) & ((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt)) & (cv$1 +1 <= MAX_INT);
not(vv : dom(status$1));
not(vv : dom(tipo$1));
"Well definedness";
((vv) : (dom(ativo$1)));
((ativo$1) : (((dom(ativo$1)) +-> (ran(ativo$1)))));
(0 +1 <= cv) & (((ativo )(vv)) = (TRUE)) & (0 +1 <= cv) & ((vv) : (VAGAS)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS))) & (0 +1 <= cv$1) & (((ativo$1 )(vv)) = (TRUE));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS))) & (((ativo$1 )(vv)) = (TRUE));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS))) & (((ativo$1 )(vv)) = (TRUE));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES}))) & (((ativo$1 )(vv)) = (TRUE));
((vv) : (dom(status$1)));
((status$1) : (((dom(status$1)) +-> (ran(status$1)))));
((vv) : (dom(tipo$1)));
((tipo$1) : (((dom(tipo$1)) +-> (ran(tipo$1)))));
(((ativo )(vv)) = (TRUE)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS}))) & (((ativo$1 )(vv)) = (TRUE));
(((tipo$1 )(zz)) = ((3|->TIPOS)));
((zz) : (dom(tipo$1)));
(((ativo$1 )(zz)) = (TRUE));
((zz) : (dom(status$1)));
(((status$1 )(zz)) = ((2|->STATUS)));
(((tipo$1 )(zz)) = ((1|->TIPOS)));
(((tipo$1 )(zz)) = ((2|->TIPOS)));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((zz) : (dom(ativo$1)));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))));
((uu) : (dom(((((dom(((tipo$1) |> ({tt})))) <| (status$1))) |> ({(1|->STATUS)})))));
((uu) : (dom(ativo$1)))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
SIM_NAO == {sim,nao};
STATUS == {livre,ocupada,S_NULL};
TIPOS == {idoso,deficiente,comum,T_NULL}
END
