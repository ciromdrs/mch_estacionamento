THEORY ProofList IS
_f(1) & _f(2) & _f(10) & _f(11) & _f(123) & WellDefinedness_pagar_ticket.5,(_f(83) & _f(81) & _f(110) => _f(125));
_f(1) & _f(2) & _f(10) & _f(11) & _f(123) & WellDefinedness_pagar_ticket.4,(_f(83) & _f(81) & _f(110) => _f(124));
_f(1) & _f(2) & _f(10) & _f(11) & _f(123) & WellDefinedness_pagar_ticket.3,(_f(83) & _f(110) => _f(125));
_f(1) & _f(2) & _f(10) & _f(11) & _f(123) & WellDefinedness_pagar_ticket.2,(_f(83) & _f(110) => _f(124));
_f(1) & _f(2) & _f(10) & _f(11) & _f(123) & WellDefinedness_pagar_ticket.1,(_f(110) => _f(124));
_f(1) & _f(2) & _f(10) & _f(11) & _f(115) & WellDefinedness_get_tipo_vaga.2,(_f(110) => _f(114));
_f(1) & _f(2) & _f(10) & _f(11) & _f(115) & WellDefinedness_get_tipo_vaga.1,(_f(110) => _f(113));
_f(1) & _f(2) & _f(10) & _f(11) & _f(109) & WellDefinedness_get_cor_lampada.4,(_f(44) & _f(110) => _f(114));
_f(1) & _f(2) & _f(10) & _f(11) & _f(109) & WellDefinedness_get_cor_lampada.3,(_f(44) & _f(110) => _f(113));
_f(1) & _f(2) & _f(10) & _f(11) & _f(109) & WellDefinedness_get_cor_lampada.2,(_f(110) => _f(112));
_f(1) & _f(2) & _f(10) & _f(11) & _f(109) & WellDefinedness_get_cor_lampada.1,(_f(110) => _f(111));
_f(1) & _f(2) & _f(10) & _f(11) & _f(91) & abrir_cancela.3,(_f(3) & _f(70) => _f(94));
_f(1) & _f(2) & _f(10) & _f(11) & _f(91) & abrir_cancela.2,(_f(3) & _f(4) => _f(93));
_f(1) & _f(2) & _f(10) & _f(11) & _f(91) & abrir_cancela.1,(_f(21) => _f(92));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.15,(_f(83) & _f(82) & _f(79) & _f(77) & _f(3) => _f(86));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.14,(_f(83) & _f(82) & _f(79) & _f(77) & _f(3) & _f(84) => _f(90));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.13,(_f(83) & _f(82) & _f(76) & _f(3) & _f(84) => _f(90));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.12,(_f(83) & _f(81) & _f(79) & _f(78) & _f(3) => _f(88));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.11,(_f(83) & _f(81) & _f(79) & _f(78) & _f(3) & _f(84) => _f(87));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.10,(_f(83) & _f(81) & _f(79) & _f(77) & _f(3) => _f(89));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.9,(_f(83) & _f(81) & _f(79) & _f(77) & _f(3) & _f(84) => _f(85));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.8,(_f(83) & _f(81) & _f(76) & _f(3) => _f(88));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.7,(_f(83) & _f(81) & _f(76) & _f(3) & _f(84) => _f(85));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.6,(_f(80) & _f(79) & _f(78) & _f(3) & _f(84) => _f(87));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.5,(_f(80) & _f(79) & _f(77) & _f(3) => _f(86));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.4,(_f(80) & _f(79) & _f(77) & _f(3) & _f(84) => _f(85));
_f(1) & _f(2) & _f(10) & _f(11) & _f(75) & pagar_ticket.3,(_f(80) & _f(76) & _f(3) & _f(84) => _f(85));
_f(1) & _f(2) & _f(10) & _f(11) & _f(72) & pagar_ticket.2,(_f(21) => _f(74));
_f(1) & _f(2) & _f(10) & _f(11) & _f(72) & pagar_ticket.1,(_f(21) => _f(73));
_f(1) & _f(2) & _f(10) & _f(11) & _f(65) & pegar_ticket.3,(_f(66) & _f(67) & _f(3) & _f(70) => _f(71));
_f(1) & _f(2) & _f(10) & _f(11) & _f(65) & pegar_ticket.2,(_f(66) & _f(67) & _f(3) & _f(4) => _f(69));
_f(1) & _f(2) & _f(10) & _f(11) & _f(65) & pegar_ticket.1,(_f(66) & _f(67) => _f(68));
_f(1) & _f(2) & _f(10) & _f(11) & _f(61) & adiantar.2,(_f(3) & _f(63) => _f(64));
_f(1) & _f(2) & _f(10) & _f(11) & _f(61) & adiantar.1,(_f(21) => _f(62));
_f(1) & _f(2) & _f(10) & _f(11) & _f(57) & indicar.1,(_f(58) & _f(59) => _f(60));
_f(1) & _f(2) & _f(10) & _f(11) & _f(54) & get_tipo_vaga.2,(_f(3) => _f(55));
_f(1) & _f(2) & _f(10) & _f(11) & _f(53) & get_tipo_vaga.1,(_f(21) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.8,(_f(45) & _f(38) => _f(52));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.7,(_f(44) & _f(42) & _f(43) & _f(39) & _f(3) => _f(51));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.6,(_f(44) & _f(42) & _f(43) & _f(38) => _f(50));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.5,(_f(44) & _f(41) & _f(39) & _f(3) => _f(49));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.4,(_f(44) & _f(41) & _f(38) => _f(48));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.3,(_f(44) & _f(40) & _f(39) & _f(3) => _f(47));
_f(1) & _f(2) & _f(10) & _f(11) & _f(37) & get_cor_lampada.2,(_f(44) & _f(40) & _f(38) => _f(46));
_f(1) & _f(2) & _f(10) & _f(11) & _f(36) & get_cor_lampada.1,(_f(21) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & _f(33) & liberar.3,(_f(3) & _f(26) => _f(35));
_f(1) & _f(2) & _f(10) & _f(11) & _f(33) & liberar.2,(_f(3) & _f(18) => _f(34));
_f(1) & _f(2) & _f(10) & _f(11) & _f(33) & liberar.1,(_f(21) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & _f(30) & ocupar.3,(_f(3) & _f(26) => _f(32));
_f(1) & _f(2) & _f(10) & _f(11) & _f(30) & ocupar.2,(_f(3) & _f(18) => _f(31));
_f(1) & _f(2) & _f(10) & _f(11) & _f(30) & ocupar.1,(_f(21) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.6,(_f(3) & _f(28) => _f(29));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.5,(_f(3) & _f(26) => _f(27));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.4,(_f(3) & _f(18) => _f(25));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.3,(_f(3) & _f(8) => _f(24));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.2,(_f(3) & _f(6) => _f(23));
_f(1) & _f(2) & _f(10) & _f(11) & _f(20) & excluir.1,(_f(21) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & _f(12) & criar.4,(_f(13) & _f(14) & _f(18) => _f(19));
_f(1) & _f(2) & _f(10) & _f(11) & _f(12) & criar.3,(_f(13) & _f(14) & _f(8) => _f(17));
_f(1) & _f(2) & _f(10) & _f(11) & _f(12) & criar.2,(_f(13) & _f(14) & _f(6) => _f(16));
_f(1) & _f(2) & _f(10) & _f(11) & _f(12) & criar.1,(_f(13) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
VAGA: FIN(INTEGER) & not(VAGA = {}) & ((1..4)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..4)*{TIPOS}) = {}) & ((1..3)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..3)*{STATUS}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & TICKET: FIN(INTEGER) & not(TICKET = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000)) & ((MAX) = ({(((3|->TIPOS)) |-> (10))}\/{(((1|->TIPOS)) |-> (5))}\/{(((2|->TIPOS)) |-> (5))}\/{(((4|->TIPOS)) |-> (0))})) & MAX : ((1..4)*{TIPOS}) +-> ((0) .. (MAX_INT)) & dom(MAX) = ((1..4)*{TIPOS}) & ((MAX) : (((((1..4)*{TIPOS})) --> (((0) .. (MAX_INT)))))) & ((((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS))) <= MAX_INT);
"Refinement is correct";
"Check invariant tickets_ativos$1 : POW( TICKET)";
{} : POW( TICKET);
"Check invariant vagas_ativas$1 : POW( VAGA)";
{} : POW( VAGA);
"Check invariant ((vagas_ativas$1) = (dom(tipo$1)))";
(({}) = (dom({})));
((hora) : (NAT)) & ((preco) : (NAT)) & ((lim) : (NAT)) & ((status) : (((VAGA) +-> (((1..3)*{STATUS}))))) & ((tipo) : (((VAGA) +-> (((1..4)*{TIPOS}))))) & ((chegada) : (((TICKET) +-> (NAT)))) & pagos : POW( dom(chegada)) & ((dom(status)) = (dom(tipo))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (MAX )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (MAX )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (MAX )((2|->TIPOS)));
tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1));
((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
((vv$1) : (VAGA));
not(vv$1 : vagas_ativas$1);
#(vv).(((vv) : (VAGA)) & not(vv : dom(tipo)) & not(vv : dom(status)) & ((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))) & ((((tipo) <+ ({((vv) |-> (tt))}))) = (((tipo$1) <+ ({((vv$1) |-> (tt))})))));
((vagas_ativas$1) \/ ({vv$1})) : POW( VAGA);
((((vagas_ativas$1) \/ ({vv$1}))) = (dom(((tipo$1) <+ ({((vv$1) |-> (tt))})))));
"Check invariant ((vagas_ativas$1) = (dom(status$1)))";
((((vagas_ativas$1) \/ ({vv$1}))) = (dom(((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
"Precondition can be deduced";
((vv) : (vagas_ativas$1));
(vagas_ativas$1 - {vv}) : POW( VAGA);
(((vagas_ativas$1 - {vv})) = (dom((({vv}) <<| (tipo$1)))));
(((vagas_ativas$1 - {vv})) = (dom((({vv}) <<| (status$1)))));
"Check invariant ((status) = (status$1))";
(((({vv}) <<| (status))) = ((({vv}) <<| (status$1))));
"Check invariant ((tipo) = (tipo$1))";
(((({vv}) <<| (tipo))) = ((({vv}) <<| (tipo$1))));
((vv) : (VAGA)) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((vagas_ativas$1) = (dom(((status$1) <+ ({((vv) |-> ((2|->STATUS)))})))));
((((status) <+ ({((vv) |-> ((2|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((2|->STATUS)))}))));
((vv) : (VAGA)) & ((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS)));
((vagas_ativas$1) = (dom(((status$1) <+ ({((vv) |-> ((1|->STATUS)))})))));
((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((1|->STATUS)))}))));
((vv) : (VAGA)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES})));
((vv) : (VAGA)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES}))) & ((cc) = (cc$1));
(((status )(vv)) = ((1|->STATUS)));
not((((status )(vv)) = ((1|->STATUS))));
(((tipo$1 )(vv)) = ((1|->TIPOS)));
(((tipo$1 )(vv)) = ((2|->TIPOS)));
not((((tipo$1 )(vv)) = ((1|->TIPOS))));
not((((tipo$1 )(vv)) = ((2|->TIPOS))));
(((status$1 )(vv)) = ((1|->STATUS)));
not((((status$1 )(vv)) = ((1|->STATUS))));
((((tipo )(vv)) = ((1|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((1|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((2|->CORES)) = ((1|->CORES))));
(((4|->CORES)) = ((1|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((1|->CORES)) = ((2|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((2|->CORES)) = ((2|->CORES))));
(((4|->CORES)) = ((2|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((1|->CORES)) = ((3|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((2|->CORES)) = ((3|->CORES))));
(((4|->CORES)) = ((3|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((1|->CORES)) = ((4|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & tickets_ativos$1 : POW( TICKET) & vagas_ativas$1 : POW( VAGA) & ((vagas_ativas$1) = (dom(tipo$1))) & ((vagas_ativas$1) = (dom(status$1))) & ((pagos) = (pagos$1)) & ((chegada) = (chegada$1)) & ((hora) = (hora$1)) & ((preco) = (preco$1)) & ((lim) = (lim$1)) & ((status) = (status$1)) & ((tipo) = (tipo$1)) & (((2|->CORES)) = ((4|->CORES))));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS})));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS}))) & ((tt) = (tt$1));
(((tipo )(vv)) = ((tipo$1 )(vv)));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))) & ((vv) = (vv$1));
((uu$1) : (dom(((((dom(((tipo$1) |> ({tt})))) <| (status$1))) |> ({(1|->STATUS)})))));
((uu$1) : (vagas_ativas$1));
((uu$1) : (dom(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))));
((horas) : (NAT)) & ((minutos) : (NAT)) & ((((horas * 60) + minutos) + hora) +1 <= 2147483647);
((((horas * 60) + minutos) + hora$1) +1 <= 2147483647);
"Check invariant ((hora) = (hora$1))";
(((((horas * 60) + minutos) + hora)) = ((((horas * 60) + minutos) + hora$1)));
((tt) = (tt$1));
((uu$1) : (TICKET));
not(uu$1 : dom(chegada$1));
not(uu$1 : dom(chegada));
((tickets_ativos$1) \/ ({uu$1})) : POW( TICKET);
"Check invariant ((chegada) = (chegada$1))";
((((chegada) <+ ({((uu$1) |-> (hora))}))) = (((chegada$1) <+ ({((uu$1) |-> (hora$1))}))));
((troco) : (NAT)) & ((dinheiro) : (NAT)) & ((ticket) : (TICKET)) & ((ticket) : (dom(chegada)));
((troco$1) : (NAT));
((ticket) : (dom(chegada$1)));
((troco) : (NAT)) & ((dinheiro) : (NAT)) & ((ticket) : (TICKET)) & ((ticket) : (dom(chegada))) & ((troco) = (troco$1));
((hora - (chegada )(ticket)) <= lim);
(0 <= ((((hora - ((chegada )(ticket) / 60)) + 1) * preco) - dinheiro));
not((0 <= ((((hora - ((chegada )(ticket) / 60)) + 1) * preco) - dinheiro)));
not(((hora - (chegada )(ticket)) <= lim));
((hora$1 - (chegada$1 )(ticket)) <= lim$1);
(0 <= ((((hora$1 - ((chegada$1 )(ticket) / 60)) + 1) * preco$1) - dinheiro));
not((0 <= ((((hora$1 - ((chegada$1 )(ticket) / 60)) + 1) * preco$1) - dinheiro)));
not(((hora$1 - (chegada$1 )(ticket)) <= lim$1));
"Check invariant ((pagos) = (pagos$1))";
((((pagos) \/ ({ticket}))) = (((pagos$1) \/ ({ticket}))));
((((((hora - ((chegada )(ticket) / 60)) + 1) * preco) - dinheiro)) = (dinheiro));
((pagos) = (((pagos$1) \/ ({ticket}))));
((dinheiro) = (((((hora$1 - ((chegada$1 )(ticket) / 60)) + 1) * preco$1) - dinheiro)));
((((((hora - ((chegada )(ticket) / 60)) + 1) * preco) - dinheiro)) = (((((hora$1 - ((chegada$1 )(ticket) / 60)) + 1) * preco$1) - dinheiro)));
((((pagos) \/ ({ticket}))) = (pagos$1));
((ticket) : (TICKET)) & ((ticket) : (pagos));
((ticket) : (tickets_ativos$1));
(tickets_ativos$1 - {ticket}) : POW( TICKET);
((chegada) = ((({ticket}) <<| (chegada$1))));
((status) = (status$1));
((lim) = (lim$1));
((preco) = (preco$1));
((hora) = (hora$1));
((chegada) = (chegada$1));
((pagos) = (pagos$1));
((vagas_ativas$1) = (dom(status$1)));
((vagas_ativas$1) = (dom(tipo$1)));
vagas_ativas$1 : POW( VAGA);
tickets_ativos$1 : POW( TICKET);
((vv) : (VAGA));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS))) & ((vv) : (vagas_ativas$1));
((vv) : (VAGA)) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS))) & ((vv) : (vagas_ativas$1));
((vv) : (VAGA)) & ((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS))) & ((vv) : (vagas_ativas$1));
((vv) : (VAGA)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES}))) & ((vv) : (vagas_ativas$1));
"Well definedness";
((vv) : (dom(status$1)));
((status$1) : (((dom(status$1)) +-> (ran(status$1)))));
((vv) : (dom(tipo$1)));
((tipo$1) : (((dom(tipo$1)) +-> (ran(tipo$1)))));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS}))) & ((vv) : (vagas_ativas$1));
((uu) : (dom(((((dom(((tipo$1) |> ({tt})))) <| (status$1))) |> ({(1|->STATUS)})))));
((minutos) : (NAT));
((horas) : (NAT));
((horas) : (NAT)) & ((minutos) : (NAT)) & ((((horas * 60) + minutos) + hora) +1 <= 2147483647) & ((horas) : (NAT)) & ((minutos) : (NAT)) & ((((horas * 60) + minutos) + hora$1) +1 <= 2147483647);
((uu) : (TICKET));
((ticket) : (TICKET));
((dinheiro) : (NAT));
((troco) : (NAT)) & ((dinheiro) : (NAT)) & ((ticket) : (TICKET)) & ((ticket) : (dom(chegada))) & ((troco$1) : (NAT)) & ((dinheiro) : (NAT)) & ((ticket) : (TICKET)) & ((ticket) : (dom(chegada$1)));
((chegada$1) : (((dom(chegada$1)) +-> (ran(chegada$1)))));
not(((60) = (0)));
((ticket) : (TICKET)) & ((ticket) : (pagos)) & ((ticket) : (TICKET)) & ((ticket) : (tickets_ativos$1))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
STATUS == {livre,ocupada,S_NULL};
TIPOS == {idoso,deficiente,comum,T_NULL}
END
