THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.16,(_f(86) & _f(91) & _f(87) & _f(88) & _f(78) => _f(82));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.15,(_f(78) => _f(98));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.14,(_f(86) & _f(91) & _f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.13,(_f(86) & _f(91) & _f(78) => _f(93));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.12,(_f(78) => _f(97));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.11,(_f(86) & _f(90) & _f(87) & _f(88) & _f(78) => _f(82));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.10,(_f(78) => _f(96));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.9,(_f(86) & _f(90) & _f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.8,(_f(86) & _f(90) & _f(78) => _f(93));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.7,(_f(78) => _f(95));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.6,(_f(86) & _f(85) & _f(87) & _f(88) & _f(78) => _f(82));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.5,(_f(78) => _f(94));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.4,(_f(86) & _f(85) & _f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.3,(_f(86) & _f(85) & _f(78) => _f(93));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.2,(_f(86) & _f(78) => _f(84));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(57) & WellDefinedness_get_info_painel.1,(_f(78) => _f(92));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(54) & WellDefinedness_get_tipo_vaga.2,(_f(78) => _f(84));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(54) & WellDefinedness_get_tipo_vaga.1,(_f(78) => _f(83));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_get_tipo_vaga.2,(_f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_get_tipo_vaga.1,(_f(78) => _f(79));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(37) & WellDefinedness_get_cor_lampada.4,(_f(45) & _f(78) => _f(84));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(37) & WellDefinedness_get_cor_lampada.3,(_f(45) & _f(78) => _f(83));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(37) & WellDefinedness_get_cor_lampada.2,(_f(78) => _f(82));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(37) & WellDefinedness_get_cor_lampada.1,(_f(78) => _f(81));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_get_cor_lampada.2,(_f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_get_cor_lampada.1,(_f(78) => _f(79));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_liberar.2,(_f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_liberar.1,(_f(78) => _f(79));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_ocupar.2,(_f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & WellDefinedness_Precondition_ocupar.1,(_f(78) => _f(79));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & WellDefinedness_criar.2,(_f(77) & _f(76) & _f(75) & _f(78) => _f(80));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & WellDefinedness_criar.1,(_f(77) & _f(76) & _f(75) & _f(78) => _f(79));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(66) & indicar.1,(_f(67) => _f(68));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.6,(_f(4) => _f(64));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.5,(_f(4) => _f(63));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.4,(_f(4) => _f(62));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.3,(_f(4) => _f(61));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.2,(_f(4) => _f(60));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(58) & get_info_painel.1,(_f(4) => _f(59));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(55) & get_tipo_vaga.2,(_f(4) => _f(56));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(54) & get_tipo_vaga.1,(_f(30) => _f(31));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.8,(_f(46) & _f(39) => _f(53));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.7,(_f(45) & _f(43) & _f(44) & _f(40) & _f(4) => _f(52));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.6,(_f(45) & _f(43) & _f(44) & _f(39) => _f(51));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.5,(_f(45) & _f(42) & _f(40) & _f(4) => _f(50));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.4,(_f(45) & _f(42) & _f(39) => _f(49));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.3,(_f(45) & _f(41) & _f(40) & _f(4) => _f(48));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(38) & get_cor_lampada.2,(_f(45) & _f(41) & _f(39) => _f(47));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(37) & get_cor_lampada.1,(_f(30) => _f(31));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(34) & liberar.3,(_f(4) & _f(27) => _f(36));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(34) & liberar.2,(_f(4) & _f(19) => _f(35));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(34) & liberar.1,(_f(30) => _f(31));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(29) & ocupar.3,(_f(4) & _f(27) => _f(33));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(29) & ocupar.2,(_f(4) & _f(19) => _f(32));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(29) & ocupar.1,(_f(30) => _f(31));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(21) & excluir.5,(_f(4) & _f(27) => _f(28));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(21) & excluir.4,(_f(4) & _f(25) => _f(26));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(21) & excluir.3,(_f(4) & _f(19) => _f(24));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(21) & excluir.2,(_f(4) & _f(7) => _f(23));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(21) & excluir.1,(_f(4) & _f(5) => _f(22));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & criar.4,(_f(12) & _f(13) & _f(14) & _f(15) & _f(19) => _f(20));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & criar.3,(_f(12) & _f(13) & _f(14) & _f(15) & _f(7) => _f(18));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & criar.2,(_f(12) & _f(13) & _f(14) & _f(15) & _f(5) => _f(17));
_f(1) & _f(2) & _f(3) & _f(9) & _f(10) & _f(11) & criar.1,(_f(12) & _f(13) & _f(14) & _f(15) => _f(16));
_f(1) & _f(2) & _f(3) & Initialisation.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & _f(3) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..4)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..4)*{TIPOS}) = {}) & ((1..3)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..3)*{STATUS}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000)) & ((MAX) = ({(((3|->TIPOS)) |-> (10))}\/{(((1|->TIPOS)) |-> (5))}\/{(((2|->TIPOS)) |-> (5))}\/{(((4|->TIPOS)) |-> (0))})) & MAX : ((1..4)*{TIPOS}) +-> ((0) .. (MAX_INT)) & dom(MAX) = ((1..4)*{TIPOS}) & ((MAX) : (((((1..4)*{TIPOS})) --> (((0) .. (MAX_INT)))))) & ((((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS))) <= MAX_INT);
((VAGA) = (((1) .. (MAX_INT))));
"Refinement is correct";
"Check invariant ((ativo$1) : (((VAGA) --> (BOOL))))";
(((VAGA * {FALSE})) : (((VAGA) --> (BOOL))));
"Check invariant ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1)))";
((dom((((VAGA * {FALSE})) |> ({TRUE})))) = (dom({})));
((status) : (((VAGA) +-> (((1..3)*{STATUS}))))) & ((tipo) : (((VAGA) +-> (((1..4)*{TIPOS}))))) & ((dom(status)) = (dom(tipo))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (MAX )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (MAX )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (MAX )((2|->TIPOS)));
ativo$1 : VAGA +-> BOOL & dom(ativo$1) = VAGA & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1));
((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
((vv$1) : (VAGA));
not(vv$1 : dom(tipo$1));
not(vv$1 : dom(status$1));
(((ativo$1 )(vv$1)) = (FALSE));
#(vv).(((vv) : (VAGA)) & not(vv : dom(tipo)) & not(vv : dom(status)) & ((((tipo) <+ ({((vv) |-> (tt))}))) = (((tipo$1) <+ ({((vv$1) |-> (tt))})))) & ((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))));
((((ativo$1) <+ ({((vv$1) |-> (TRUE))}))) : (((VAGA) --> (BOOL))));
((dom(((((ativo$1) <+ ({((vv$1) |-> (TRUE))}))) |> ({TRUE})))) = (dom(((tipo$1) <+ ({((vv$1) |-> (tt))})))));
"Check invariant ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1)))";
((dom(((((ativo$1) <+ ({((vv$1) |-> (TRUE))}))) |> ({TRUE})))) = (dom(((status$1) <+ ({((vv$1) |-> ((1|->STATUS)))})))));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((((ativo$1) <+ ({((vv) |-> (FALSE))}))) : (((VAGA) --> (BOOL))));
((dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE})))) = (dom((({vv}) <<| (tipo$1)))));
((dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE})))) = (dom((({vv}) <<| (status$1)))));
"Check invariant ((tipo) = (tipo$1))";
(((({vv}) <<| (tipo))) = ((({vv}) <<| (tipo$1))));
"Check invariant ((status) = (status$1))";
(((({vv}) <<| (status))) = ((({vv}) <<| (status$1))));
((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
"Precondition can be deduced";
(((ativo$1 )(vv)) = (TRUE));
((dom(((ativo$1) |> ({TRUE})))) = (dom(((status$1) <+ ({((vv) |-> ((2|->STATUS)))})))));
((((status) <+ ({((vv) |-> ((2|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((2|->STATUS)))}))));
((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS)));
((dom(((ativo$1) |> ({TRUE})))) = (dom(((status$1) <+ ({((vv) |-> ((1|->STATUS)))})))));
((((status) <+ ({((vv) |-> ((1|->STATUS)))}))) = (((status$1) <+ ({((vv) |-> ((1|->STATUS)))}))));
((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES})));
((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES}))) & ((cc) = (cc$1));
(((status )(vv)) = ((1|->STATUS)));
not((((status )(vv)) = ((1|->STATUS))));
(((tipo$1 )(vv)) = ((1|->TIPOS)));
(((tipo$1 )(vv)) = ((2|->TIPOS)));
not((((tipo$1 )(vv)) = ((1|->TIPOS))));
not((((tipo$1 )(vv)) = ((2|->TIPOS))));
(((status$1 )(vv)) = ((1|->STATUS)));
not((((status$1 )(vv)) = ((1|->STATUS))));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((1|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((2|->CORES)) = ((1|->CORES))));
(((4|->CORES)) = ((1|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((1|->CORES)) = ((2|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((2|->CORES)) = ((2|->CORES))));
(((4|->CORES)) = ((2|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((1|->CORES)) = ((3|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((2|->CORES)) = ((3|->CORES))));
(((4|->CORES)) = ((3|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((1|->CORES)) = ((4|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((ativo$1) : (((VAGA) --> (BOOL)))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1))) & ((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1))) & ((tipo) = (tipo$1)) & ((status) = (status$1)) & (((2|->CORES)) = ((4|->CORES))));
((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS})));
((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS}))) & ((tt) = (tt$1));
(((tipo )(vv)) = ((tipo$1 )(vv)));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT)) & ((qc) = (qc$1)) & ((oc) = (oc$1)) & ((qi) = (qi$1)) & ((oi) = (oi$1)) & ((qd) = (qd$1)) & ((od) = (od$1));
((card(((tipo) |> ({(3|->TIPOS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((card(((((dom(((tipo) |> ({(3|->TIPOS)})))) <| (status))) |> ({(2|->STATUS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((card(((tipo) |> ({(1|->TIPOS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((card(((((dom(((tipo) |> ({(1|->TIPOS)})))) <| (status))) |> ({(2|->STATUS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((card(((tipo) |> ({(2|->TIPOS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((card(((((dom(((tipo) |> ({(2|->TIPOS)})))) <| (status))) |> ({(2|->STATUS)})))) = (SIGMA(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))) | 1)));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))) & ((vv) = (vv$1));
((uu$1) : (dom(((((dom(((tipo$1) |> ({tt})))) <| (status$1))) |> ({(1|->STATUS)})))));
((uu$1) : (dom(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))));
((tipo) = (tipo$1));
((dom(((ativo$1) |> ({TRUE})))) = (dom(status$1)));
((dom(((ativo$1) |> ({TRUE})))) = (dom(tipo$1)));
ativo$1 : VAGA +-> BOOL;
dom(ativo$1) = VAGA;
((ativo$1) : (((VAGA) --> (BOOL))));
not(vv : dom(status$1));
not(vv : dom(tipo$1));
((vv) : (VAGA));
"Well definedness";
((vv) : (dom(ativo$1)));
((ativo$1) : (((dom(ativo$1)) +-> (ran(ativo$1)))));
((vv) : (dom(status$1)));
((status$1) : (((dom(status$1)) +-> (ran(status$1)))));
((vv) : (dom(tipo$1)));
((tipo$1) : (((dom(tipo$1)) +-> (ran(tipo$1)))));
(((tipo$1 )(zz)) = ((3|->TIPOS)));
((zz) : (dom(tipo$1)));
(((ativo$1 )(zz)) = (TRUE));
((zz) : (dom(status$1)));
(((status$1 )(zz)) = ((2|->STATUS)));
(((tipo$1 )(zz)) = ((1|->TIPOS)));
(((tipo$1 )(zz)) = ((2|->TIPOS)));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((zz) : (dom(ativo$1)));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE))))));
((SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS))))) : (FIN(SET(zz).(((zz) : (dom(tipo$1))) & (((tipo$1 )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status$1))) & (((status$1 )(zz)) = ((2|->STATUS)))))))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
STATUS == {livre,ocupada,S_NULL};
TIPOS == {idoso,deficiente,comum,T_NULL}
END
