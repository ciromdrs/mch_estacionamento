THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & WellDefinedness_Precondition_abrir_cancela.1,(_f(55) & _f(54) & _f(52) => _f(56));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(33) & WellDefinedness_pagar_ticket.3,(_f(37) & _f(35) & _f(52) => _f(53));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(33) & WellDefinedness_pagar_ticket.2,(_f(37) & _f(52) => _f(53));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(33) & WellDefinedness_pagar_ticket.1,(_f(52) => _f(53));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(33) & pagar_ticket.2,(_f(37) & _f(35) & _f(19) & _f(24) => _f(38));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(33) & pagar_ticket.1,(_f(34) & _f(19) & _f(24) => _f(38));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & pegar_ticket.2,(_f(29) & _f(30) & _f(19) & _f(24) => _f(32));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & pegar_ticket.1,(_f(29) & _f(30) & _f(19) & _f(22) => _f(31));
_f(1) & _f(2) & _f(3) & _f(4) & _f(26) & _f(27) & adiantar.1,(_f(19) & _f(20) => _f(28));
_f(1) & _f(2) & _f(3) & _f(4) & Initialisation.3,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(10) & _f(13) & _f(14) & _f(10) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & Initialisation.2,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(10) & _f(13) & _f(14) & _f(10) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(22) => _f(23));
_f(1) & _f(2) & _f(3) & _f(4) & Initialisation.1,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(10) & _f(13) & _f(14) & _f(10) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(20) => _f(21))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
VAGAS: FIN(INTEGER) & not(VAGAS = {}) & ((1..3)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..3)*{TIPOS}) = {}) & ((1..2)*{STATUS_VAGA}): FIN(NATURAL*{STATUS_VAGA}) & not(((1..2)*{STATUS_VAGA}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & ((1..2)*{SIM_NAO}): FIN(NATURAL*{SIM_NAO}) & not(((1..2)*{SIM_NAO}) = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000000));
TICKET: FIN(INTEGER) & not(TICKET = {}) & ((preco) : (NAT)) & ((lim) : (NAT));
qtd_max : ((1..3)*{TIPOS}) +-> NAT & dom(qtd_max) = ((1..3)*{TIPOS}) & ((qtd_max) : (((((1..3)*{TIPOS})) --> (NAT)))) & ((ini) : (BOOL)) & status : VAGAS +-> ((1..2)*{STATUS_VAGA}) & dom(status) = VAGAS & ((status) : (((VAGAS) --> (((1..2)*{STATUS_VAGA}))))) & cor : VAGAS +-> ((1..4)*{CORES}) & dom(cor) = VAGAS & ((cor) : (((VAGAS) --> (((1..4)*{CORES}))))) & tipo : VAGAS +-> ((1..3)*{TIPOS}) & dom(tipo) = VAGAS & ((tipo) : (((VAGAS) --> (((1..3)*{TIPOS}))))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (qtd_max )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (qtd_max )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (qtd_max )((2|->TIPOS)));
(((1..3)*{TIPOS}) * {0}) : ((1..3)*{TIPOS}) +-> NAT;
dom((((1..3)*{TIPOS}) * {0})) = ((1..3)*{TIPOS});
(((((1..3)*{TIPOS}) * {0})) : (((((1..3)*{TIPOS})) --> (NAT))));
((FALSE) : (BOOL));
{} : VAGAS +-> ((1..2)*{STATUS_VAGA});
dom({}) = VAGAS;
(({}) : (((VAGAS) --> (((1..2)*{STATUS_VAGA})))));
{} : VAGAS +-> ((1..4)*{CORES});
(({}) : (((VAGAS) --> (((1..4)*{CORES})))));
{} : VAGAS +-> ((1..3)*{TIPOS});
(({}) : (((VAGAS) --> (((1..3)*{TIPOS})))));
(card((({}) |> ({(3|->TIPOS)}))) <= ((((1..3)*{TIPOS}) * {0}) )((3|->TIPOS)));
(card((({}) |> ({(1|->TIPOS)}))) <= ((((1..3)*{TIPOS}) * {0}) )((1|->TIPOS)));
(card((({}) |> ({(2|->TIPOS)}))) <= ((((1..3)*{TIPOS}) * {0}) )((2|->TIPOS)));
"Invariant is preserved";
"Check invariant ((hora) : (NAT))";
((0) : (NAT));
"Check invariant ((chegada) : (((TICKET) --> (NAT))))";
(({}) : (((TICKET) --> (NAT))));
"Check invariant ((pagou) : (((TICKET) --> (SIM_NAO))))";
(((TICKET * {(2|->SIM_NAO)})) : (((TICKET) --> (((1..2)*{SIM_NAO})))));
((hora) : (NAT)) & chegada : TICKET +-> NAT & dom(chegada) = TICKET & ((chegada) : (((TICKET) --> (NAT)))) & pagou : TICKET +-> ((1..2)*{SIM_NAO}) & dom(pagou) = TICKET & ((pagou) : (((TICKET) --> (((1..2)*{SIM_NAO})))));
((mm) : ((NAT-{0}))) & ((hora + mm) +1 <= 2147483647);
(((hora + mm)) : (NAT));
((uu) : (TICKET));
not(uu : dom(chegada));
((((chegada) <+ ({((tt) |-> (hora))}))) : (((TICKET) --> (NAT))));
((((pagou) <+ ({((tt) |-> ((2|->SIM_NAO)))}))) : (((TICKET) --> (((1..2)*{SIM_NAO})))));
((troco) : (NAT)) & ((dinheiro) : (NAT)) & ((ticket) : (dom(chegada)));
((hora - (chegada )(ticket)) <= lim);
(0 <= (((hora - (chegada )(ticket)) * preco) - dinheiro));
not((0 <= (((hora - (chegada )(ticket)) * preco) - dinheiro)));
not(((hora - (chegada )(ticket)) <= lim));
((((pagou) <+ ({((ticket) |-> ((1|->SIM_NAO)))}))) : (((TICKET) --> (((1..2)*{SIM_NAO})))));
((tt) : (TICKET)) & ((tt) : (dom(pagou))) & (((pagou )(tt)) = ((1|->SIM_NAO)));
((max_idosos) : (NAT));
((max_comuns) : (NAT));
((lim) : (NAT));
((preco) : (NAT));
TICKET: FIN(INTEGER) & not(TICKET = {});
chegada : TICKET +-> NAT;
dom(chegada) = TICKET;
((chegada) : (((TICKET) --> (NAT))));
((hora) : (NAT));
((mm) : ((NAT-{0})));
((dinheiro) : (NAT));
((troco) : (NAT));
"Well definedness";
((chegada) : (((dom(chegada)) +-> (ran(chegada)))));
((tt) : (dom(pagou)));
((tt) : (TICKET));
((pagou) : (((dom(pagou)) +-> (ran(pagou)))))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
SIM_NAO == {sim,nao};
STATUS_VAGA == {livre,ocupada};
TIPOS == {idoso,deficiente,comum}
END
