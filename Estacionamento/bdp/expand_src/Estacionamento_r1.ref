/* Estacionamento_r1
 * Author: Saul
 * Creation date: 23/10/2016
 */

REFINEMENT Estacionamento_r1
REFINES Estacionamento

SEES TiposComuns

ABSTRACT_VARIABLES
    cv , // Contador de Vagas
    tipo ,
    status

INVARIANT
    cv : 0 .. MAX_INT &
    cv = card ( tipo ) &
    cv = card ( status ) &
    cv <= MAX ( comum ) + MAX ( idoso ) + MAX ( deficiente )

INITIALISATION
    cv     := 0 ;
    tipo   := {} ;
    status := {}

OPERATIONS
    // Controle de vagas
    criar ( tt ) =
        PRE cv < MAX_INT THEN
            cv := cv + 1 ;
            ANY vv WHERE
                vv : VAGA        &
                vv /: dom ( tipo ) &
                vv /: dom ( status )
            THEN
                tipo ( vv ) := tt ;
                status ( vv ) := livre
            END
        END ;

    excluir ( vv ) =
        PRE cv > 0 THEN
            cv := cv - 1 ;
            tipo   := { vv } <<| tipo ;
            status := { vv } <<| status
        END ;

    // Ocupação e liberação de vagas
    ocupar ( vv ) = status ( vv ) := ocupada ;

    liberar ( vv ) = status ( vv ) := livre ;

    // Consultas
    cc <-- get_cor_lampada ( vv ) =
        BEGIN
            IF status ( vv ) = livre THEN
                CASE tipo ( vv ) OF EITHER idoso THEN
                    cc := azul
                OR deficiente THEN
                    cc := amarela
                ELSE // comum
                    cc := verde
                END
                END
            ELSE // status(vv) = ocupada
                cc := vermelha
            END
        END ;

    tt <-- get_tipo_vaga ( vv ) = tt := tipo ( vv ) ;

    /* qc: Quantidade de vagas Comuns
       oc: quantidade de vagas Ocupadas Comuns
       as demais são análogas para deficientes e idosos.
    */
    qc , oc , qi , oi , qd , od <-- get_info_painel =
        BEGIN
            qc := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = comum | 1 ) ;
            oc := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = comum &
                              zz : dom ( status ) & status ( zz ) = ocupada | 1 ) ;

            qi := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = idoso | 1 ) ;
            oi := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = idoso &
                              zz : dom ( status ) & status ( zz ) = ocupada | 1 ) ;

            qd := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = deficiente | 1 ) ;
            od := SIGMA zz . ( zz : dom ( tipo ) & tipo ( zz ) = deficiente &
                              zz : dom ( status ) & status ( zz ) = ocupada | 1 )
        END ;

    vv <-- indicar ( tt ) =
        ANY uu
        WHERE uu : dom ( dom ( tipo |> { tt } ) <| status |> { livre } ) THEN
            vv := uu
        END
END
