THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.6,(_f(105) & _f(82) & _f(132) & _f(127) => _f(131));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.5,(_f(105) & _f(82) & _f(132) & _f(127) => _f(95));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.4,(_f(105) & _f(82) & _f(127) => _f(130));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.3,(_f(105) & _f(82) & _f(127) => _f(94));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.2,(_f(105) & _f(127) => _f(129));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(103) & WellDefinedness_indicar.1,(_f(105) & _f(127) => _f(96));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(73) & WellDefinedness_get_info_painel.4,(_f(75) & _f(82) & _f(127) => _f(131));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(73) & WellDefinedness_get_info_painel.3,(_f(75) & _f(82) & _f(127) => _f(95));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(73) & WellDefinedness_get_info_painel.2,(_f(75) & _f(127) => _f(129));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(73) & WellDefinedness_get_info_painel.1,(_f(75) & _f(127) => _f(96));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(70) & WellDefinedness_get_tipo_vaga.2,(_f(127) => _f(131));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(70) & WellDefinedness_get_tipo_vaga.1,(_f(127) => _f(67));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(51) & WellDefinedness_get_cor_lampada.4,(_f(58) & _f(127) => _f(131));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(51) & WellDefinedness_get_cor_lampada.3,(_f(58) & _f(127) => _f(67));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(51) & WellDefinedness_get_cor_lampada.2,(_f(127) => _f(130));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(51) & WellDefinedness_get_cor_lampada.1,(_f(127) => _f(69));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(13) & WellDefinedness_criar.2,(_f(23) & _f(127) => _f(129));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(13) & WellDefinedness_criar.1,(_f(23) & _f(127) => _f(128));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.7,(_f(39) & _f(20) & _f(112) & _f(105) & _f(111) & _f(33) => _f(116));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.6,(_f(39) & _f(20) & _f(112) & _f(105) & _f(110) & _f(31) => _f(115));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.5,(_f(39) & _f(20) & _f(112) & _f(105) & _f(110) & _f(31) => _f(114));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.4,(_f(39) & _f(20) & _f(112) & _f(105) & _f(110) & _f(31) => _f(113));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.3,(_f(39) & _f(20) & _f(112) & _f(105) & _f(110) & _f(109) & _f(28) => _f(29));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.2,(_f(39) & _f(20) & _f(112) & _f(105) & _f(110) & _f(106) & _f(107) & _f(108) & _f(28) => _f(29));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(104) & indicar.1,(_f(39) & _f(20) & _f(112) & _f(105) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.20,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(102));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.19,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(101));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.18,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(100));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.17,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(99));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.16,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(98));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.15,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(85) & _f(33) => _f(97));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.14,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(31) => _f(96));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.13,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(83) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.12,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(31) => _f(95));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.11,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(80) & _f(81) & _f(31) => _f(94));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.10,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(80) & _f(81) & _f(77) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.9,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(80) & _f(81) & _f(76) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.8,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(79) & _f(31) => _f(94));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.7,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(79) & _f(77) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.6,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(79) & _f(76) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.5,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(78) & _f(31) => _f(94));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.4,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(78) & _f(77) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.3,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(84) & _f(82) & _f(78) & _f(76) & _f(28) => _f(93));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.2,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(75) & _f(24) => _f(92));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(74) & get_info_painel.1,(_f(86) & _f(87) & _f(88) & _f(89) & _f(90) & _f(91) & _f(22) => _f(75));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(71) & get_tipo_vaga.2,(_f(40) & _f(20) & _f(31) => _f(67));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(71) & get_tipo_vaga.1,(_f(40) & _f(20) & _f(4) => _f(72));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.9,(_f(41) & _f(40) & _f(60) & _f(31) => _f(69));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.8,(_f(41) & _f(40) & _f(60) & _f(59) & _f(42) & _f(4) => _f(68));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.7,(_f(41) & _f(40) & _f(60) & _f(58) & _f(31) => _f(67));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.6,(_f(41) & _f(40) & _f(60) & _f(58) & _f(56) & _f(57) & _f(53) & _f(4) => _f(66));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.5,(_f(41) & _f(40) & _f(60) & _f(58) & _f(56) & _f(57) & _f(42) & _f(4) => _f(65));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.4,(_f(41) & _f(40) & _f(60) & _f(58) & _f(55) & _f(53) & _f(4) => _f(64));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.3,(_f(41) & _f(40) & _f(60) & _f(58) & _f(55) & _f(42) & _f(4) => _f(63));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.2,(_f(41) & _f(40) & _f(60) & _f(58) & _f(54) & _f(53) & _f(4) => _f(62));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & _f(52) & get_cor_lampada.1,(_f(41) & _f(40) & _f(60) & _f(58) & _f(54) & _f(42) & _f(4) => _f(61));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & liberar.2,(_f(41) & _f(48) & _f(4) & _f(9) => _f(50));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & liberar.1,(_f(41) & _f(48) & _f(4) & _f(7) => _f(49));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & ocupar.2,(_f(41) & _f(42) & _f(4) & _f(9) => _f(46));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & ocupar.1,(_f(41) & _f(42) & _f(4) & _f(7) => _f(45));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & excluir.1,(_f(39) & _f(40) & _f(41) & _f(42) & _f(4) & _f(9) => _f(43));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.11,(_f(20) & _f(21) & _f(14) & _f(19) & _f(33) & _f(9) => _f(37));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.10,(_f(20) & _f(21) & _f(14) & _f(19) & _f(33) & _f(7) => _f(36));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.9,(_f(20) & _f(21) & _f(14) & _f(19) & _f(33) & _f(5) => _f(35));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.8,(_f(20) & _f(21) & _f(14) & _f(19) & _f(33) => _f(34));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.7,(_f(20) & _f(21) & _f(14) & _f(17) & _f(18) & _f(31) => _f(32));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.6,(_f(20) & _f(21) & _f(14) & _f(17) & _f(18) & _f(16) & _f(28) => _f(29));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.5,(_f(20) & _f(21) & _f(14) & _f(17) & _f(18) & _f(16) & _f(26) => _f(30));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.4,(_f(20) & _f(21) & _f(14) & _f(17) & _f(18) & _f(15) & _f(28) => _f(29));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.3,(_f(20) & _f(21) & _f(14) & _f(17) & _f(18) & _f(15) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.2,(_f(20) & _f(21) & _f(14) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(3) & _f(11) & _f(12) & criar.1,(_f(20) & _f(21) & _f(22) => _f(23));
_f(1) & _f(2) & _f(3) & _f(3) & Initialisation.3,(_f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(3) & _f(3) & Initialisation.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & _f(3) & _f(3) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..4)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..4)*{TIPOS}) = {}) & ((1..3)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..3)*{STATUS}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000)) & ((MAX) = ({(((3|->TIPOS)) |-> (10))}\/{(((1|->TIPOS)) |-> (5))}\/{(((2|->TIPOS)) |-> (5))}\/{(((4|->TIPOS)) |-> (0))})) & MAX : ((1..4)*{TIPOS}) +-> ((0) .. (MAX_INT)) & dom(MAX) = ((1..4)*{TIPOS}) & ((MAX) : (((((1..4)*{TIPOS})) --> (((0) .. (MAX_INT)))))) & ((((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS))) <= MAX_INT);
((VAGA) = (((1) .. (MAX_INT))));
"Refinement is correct";
"Check invariant ((tipoI$1) : (((VAGA) --> (TIPOS))))";
(((VAGA * {(4|->TIPOS)})) : (((VAGA) --> (((1..4)*{TIPOS})))));
"Check invariant ((statusI$1) : (((VAGA) --> (STATUS))))";
(((VAGA * {(3|->STATUS)})) : (((VAGA) --> (((1..3)*{STATUS})))));
"Check invariant ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1)))))";
((dom(((dom((((VAGA * {FALSE})) |> ({TRUE})))) <| ((VAGA * {(4|->TIPOS)}))))) = (dom(((dom((((VAGA * {FALSE})) |> ({TRUE})))) <| ((VAGA * {(3|->STATUS)}))))));
ativo : VAGA +-> BOOL & dom(ativo) = VAGA & ((ativo) : (((VAGA) --> (BOOL)))) & ((dom(((ativo) |> ({TRUE})))) = (dom(tipo))) & ((dom(((ativo) |> ({TRUE})))) = (dom(status))) & ((status) : (((VAGA) +-> (((1..3)*{STATUS}))))) & ((tipo) : (((VAGA) +-> (((1..4)*{TIPOS}))))) & ((dom(status)) = (dom(tipo))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (MAX )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (MAX )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (MAX )((2|->TIPOS)));
tipoI$1 : VAGA +-> ((1..4)*{TIPOS}) & dom(tipoI$1) = VAGA & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & statusI$1 : VAGA +-> ((1..3)*{STATUS}) & dom(statusI$1) = VAGA & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo) = (ativo$1));
((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
((ran(((((1) .. (ii$1))) <| (ativo$2)))) = ({TRUE}));
(((ativo$2 )((ii$1 + 1))) = (FALSE));
not((((ativo$2 )((ii$1 + 1))) = (FALSE)));
(ii$1 +1 <= MAX_INT);
((continuar$1) = (TRUE));
not((ii$1 +1 <= MAX_INT) & ((continuar$1) = (TRUE)));
((tt) : (((1..4)*{TIPOS})));
(card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
"Loop initialisation";
((ran(((((1) .. (0))) <| (ativo$1)))) = ({TRUE}));
"Loop variant is positive";
(0 <= (MAX_INT - ii$1));
"Loop invariant is preserved";
((ran(((((1) .. ((ii$1 + 1)))) <| (((ativo$2) <+ ({(((ii$1 + 1)) |-> (TRUE))})))))) = ({TRUE}));
"Variant is decreasing";
((MAX_INT - (ii$1 + 1)) +1 <= (MAX_INT - ii$1));
((ran(((((1) .. ((ii$1 + 1)))) <| (ativo$2)))) = ({TRUE}));
"Instruction Well Definess";
(((ii$1 + 1)) : (dom(ativo$2)));
"End of loop";
#(vv).(((vv) : (VAGA)) & not(vv : dom(tipo)) & not(vv : dom(status)) & (((ativo$1 )(vv)) = (FALSE)) & ((((ativo$1) <+ ({((vv) |-> (TRUE))}))) = (ativo$2)));
((tipoI$2) : (((VAGA) --> (((1..4)*{TIPOS})))));
((statusI$2) : (((VAGA) --> (((1..3)*{STATUS})))));
((dom(((dom(((ativo$2) |> ({TRUE})))) <| (tipoI$2)))) = (dom(((dom(((ativo$2) |> ({TRUE})))) <| (statusI$2)))));
((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((vv) : (VAGA));
((vv) : (dom(tipo)));
((vv) : (dom(status)));
(((status )(vv)) = ((1|->STATUS)));
((dom(((dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((((ativo$1) <+ ({((vv) |-> (FALSE))}))) |> ({TRUE})))) <| (statusI$1)))));
((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((((statusI$1) <+ ({((vv) |-> ((2|->STATUS)))}))) : (((VAGA) --> (((1..3)*{STATUS})))));
((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (((statusI$1) <+ ({((vv) |-> ((2|->STATUS)))})))))));
((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS)));
(((status )(vv)) = ((2|->STATUS)));
((((statusI$1) <+ ({((vv) |-> ((1|->STATUS)))}))) : (((VAGA) --> (((1..3)*{STATUS})))));
((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (((statusI$1) <+ ({((vv) |-> ((1|->STATUS)))})))))));
((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES})));
((cc$1) = (cc));
not((((status )(vv)) = ((1|->STATUS))));
(((tipoI$1 )(vv)) = ((1|->TIPOS)));
(((tipoI$1 )(vv)) = ((2|->TIPOS)));
not((((tipoI$1 )(vv)) = ((1|->TIPOS))));
not((((tipoI$1 )(vv)) = ((2|->TIPOS))));
(((statusI$1 )(vv)) = ((1|->STATUS)));
not((((statusI$1 )(vv)) = ((1|->STATUS))));
((cc) : (((1..4)*{CORES})));
((((tipo )(vv)) = ((1|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((1|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((1|->CORES)) = ((2|->CORES))));
(((1|->CORES)) = ((4|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((2|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((2|->CORES)) = ((2|->CORES))));
(((2|->CORES)) = ((4|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((3|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((3|->CORES)) = ((2|->CORES))));
(((3|->CORES)) = ((4|->CORES)));
((vv) : (dom(tipoI$1)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((4|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS}))))) & ((statusI$1) : (((VAGA) --> (((1..3)*{STATUS}))))) & ((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1))))) & ((ativo$1) = (ativo$1)) & (((4|->CORES)) = ((2|->CORES))));
((vv) : (dom(statusI$1)));
((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS})));
((tt$1) = (tt));
(((tipoI$1 )(vv)) = ((tipo )(vv)));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT));
((qc$1) = (qc)) & ((oc$1) = (oc)) & ((qi$1) = (qi)) & ((oi$1) = (oi)) & ((qd$1) = (qd)) & ((od$1) = (od));
((ran(((((1) .. (1))) <| (ativo$1)))) = ({TRUE}));
(((statusI$1 )(1)) = ((2|->STATUS)));
not((((statusI$1 )(1)) = ((2|->STATUS))));
(((tipoI$1 )(1)) = ((1|->TIPOS)));
(((tipoI$1 )(1)) = ((2|->TIPOS)));
not((((tipoI$1 )(1)) = ((1|->TIPOS))));
not((((tipoI$1 )(1)) = ((2|->TIPOS))));
(((ativo$1 )(1)) = (TRUE));
not((((ativo$1 )(1)) = (TRUE)));
(1 <= MAX_INT);
not((1 <= MAX_INT));
((qc) : (NAT));
((oc) : (NAT));
((qi) : (NAT));
((oi) : (NAT));
((qd) : (NAT));
((od) : (NAT));
(0 <= (MAX_INT - 1));
((MAX_INT - 1) +1 <= (MAX_INT - 1));
((1) : (dom(statusI$1)));
((1) : (dom(tipoI$1)));
((1) : (dom(ativo$1)));
((qc$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((oc$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((qi$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((oi$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((qd$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) | 1)));
((od$2) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & (((ativo$1 )(zz)) = (TRUE)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((vv$1) = (vv));
((1) = (1));
(((ativo$1 )(ii$1)) = (TRUE));
(((statusI$1 )(ii$1)) = ((1|->STATUS)));
(((tipoI$1 )(ii$1)) = (tt));
not((((ativo$1 )(ii$1)) = (TRUE)) & (((statusI$1 )(ii$1)) = ((1|->STATUS))) & (((tipoI$1 )(ii$1)) = (tt)));
(ii$1 <= MAX_INT);
not((ii$1 <= MAX_INT));
(0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((ii$1) : (dom(ativo$1)));
((ii$1) : (dom(statusI$1)));
((ii$1) : (dom(tipoI$1)));
((vv$2) : (dom(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))));
((dom(((dom(((ativo$1) |> ({TRUE})))) <| (tipoI$1)))) = (dom(((dom(((ativo$1) |> ({TRUE})))) <| (statusI$1)))));
statusI$1 : VAGA +-> ((1..3)*{STATUS});
dom(statusI$1) = VAGA;
((statusI$1) : (((VAGA) --> (((1..3)*{STATUS})))));
tipoI$1 : VAGA +-> ((1..4)*{TIPOS});
dom(tipoI$1) = VAGA;
((tipoI$1) : (((VAGA) --> (((1..4)*{TIPOS})))));
(0 +1 <= MAX_INT);
(((ativo$1 )((0 + 1))) = (FALSE));
not((((ativo$1 )((0 + 1))) = (FALSE)));
"Well definedness";
(((0 + 1)) : (dom(ativo$1)));
((ativo$1) : (((dom(ativo$1)) +-> (ran(ativo$1)))));
((statusI$1) : (((dom(statusI$1)) +-> (ran(statusI$1)))));
((tipoI$1) : (((dom(tipoI$1)) +-> (ran(tipoI$1)))));
(((statusI$1 )(1)) = ((1|->STATUS)));
(((tipoI$1 )(1)) = (tt));
not((((ativo$1 )(1)) = (TRUE)) & (((statusI$1 )(1)) = ((1|->STATUS))) & (((tipoI$1 )(1)) = (tt)))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
STATUS == {livre,ocupada,S_NULL};
TIPOS == {idoso,deficiente,comum,T_NULL}
END
