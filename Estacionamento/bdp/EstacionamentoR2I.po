THEORY ProofList IS
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(90) & WellDefinedness_get_tipo_vaga.2,(_f(122) => _f(128));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(90) & WellDefinedness_get_tipo_vaga.1,(_f(122) => _f(87));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(71) & WellDefinedness_get_cor_lampada.4,(_f(78) & _f(122) => _f(128));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(71) & WellDefinedness_get_cor_lampada.3,(_f(78) & _f(122) => _f(87));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(71) & WellDefinedness_get_cor_lampada.2,(_f(122) => _f(124));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(71) & WellDefinedness_get_cor_lampada.1,(_f(122) => _f(89));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(34) & WellDefinedness_criar.4,(_f(133) & _f(122) => _f(132));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(34) & WellDefinedness_criar.3,(_f(133) & _f(122) => _f(137));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(34) & WellDefinedness_criar.2,(_f(7) & _f(122) => _f(132));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(34) & WellDefinedness_criar.1,(_f(7) & _f(122) => _f(134));
_f(1) & _f(2) & _f(5) & _f(6) & WellDefinednessInitialisation.2,(_f(7) & _f(122) => _f(132));
_f(1) & _f(2) & _f(5) & _f(6) & WellDefinednessInitialisation.1,(_f(7) & _f(122) => _f(134));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.10,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(65) & _f(122) => _f(132));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.9,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(65) & _f(122) => _f(131));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.8,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(122) => _f(130));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.7,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(122) => _f(129));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.6,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(122) => _f(128));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.5,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(112) & _f(122) => _f(127));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.4,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(122) => _f(126));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.3,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(122) => _f(125));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.2,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(122) => _f(124));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & WellDefinednessInvariant.1,(_f(119) & _f(120) & _f(121) & _f(116) & _f(117) & _f(118) & _f(113) & _f(114) & _f(115) & _f(51) & _f(122) => _f(123));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(108) & indicar.2,(_f(53) & _f(41) & _f(109) & _f(57) => _f(111));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(108) & indicar.1,(_f(53) & _f(41) & _f(109) & _f(57) => _f(110));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.6,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(106));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.5,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(105));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.4,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(104));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.3,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(103));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.2,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(102));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(94) & get_info_painel.1,(_f(95) & _f(96) & _f(97) & _f(98) & _f(99) & _f(100) & _f(57) => _f(101));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(91) & get_tipo_vaga.2,(_f(52) & _f(52) & _f(54) & _f(41) & _f(47) => _f(87));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(91) & get_tipo_vaga.1,(_f(52) & _f(52) & _f(54) & _f(41) & _f(57) => _f(92));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.9,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(47) => _f(89));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.8,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(79) & _f(56) & _f(57) => _f(88));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.7,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(47) => _f(87));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.6,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(76) & _f(77) & _f(73) & _f(57) => _f(86));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.5,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(76) & _f(77) & _f(56) & _f(57) => _f(85));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.4,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(75) & _f(73) & _f(57) => _f(84));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.3,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(75) & _f(56) & _f(57) => _f(83));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.2,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(74) & _f(73) & _f(57) => _f(82));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & _f(72) & get_cor_lampada.1,(_f(52) & _f(52) & _f(55) & _f(54) & _f(80) & _f(78) & _f(74) & _f(56) & _f(57) => _f(81));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & liberar.4,(_f(52) & _f(52) & _f(55) & _f(68) & _f(51) & _f(57) => _f(66));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & liberar.3,(_f(52) & _f(52) & _f(55) & _f(68) & _f(51) & _f(57) => _f(65));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & liberar.2,(_f(52) & _f(52) & _f(55) & _f(68) & _f(51) & _f(57) => _f(70));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & liberar.1,(_f(52) & _f(52) & _f(55) & _f(68) & _f(57) & _f(23) => _f(69));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & ocupar.4,(_f(52) & _f(52) & _f(55) & _f(56) & _f(51) & _f(57) => _f(66));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & ocupar.3,(_f(52) & _f(52) & _f(55) & _f(56) & _f(51) & _f(57) => _f(65));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & ocupar.2,(_f(52) & _f(52) & _f(55) & _f(56) & _f(51) & _f(57) => _f(64));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & ocupar.1,(_f(52) & _f(52) & _f(55) & _f(56) & _f(57) & _f(23) => _f(63));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & excluir.4,(_f(52) & _f(52) & _f(53) & _f(54) & _f(55) & _f(56) & _f(51) & _f(57) => _f(61));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & excluir.3,(_f(52) & _f(52) & _f(53) & _f(54) & _f(55) & _f(56) & _f(51) & _f(57) => _f(60));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & excluir.2,(_f(52) & _f(52) & _f(53) & _f(54) & _f(55) & _f(56) & _f(51) & _f(57) => _f(59));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & excluir.1,(_f(52) & _f(52) & _f(53) & _f(54) & _f(55) & _f(56) & _f(57) & _f(27) => _f(58));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.11,(_f(41) & _f(42) & _f(35) & _f(40) & _f(21) & _f(27) => _f(28));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.10,(_f(41) & _f(42) & _f(35) & _f(40) & _f(21) & _f(25) => _f(26));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.9,(_f(41) & _f(42) & _f(35) & _f(40) & _f(21) & _f(23) => _f(24));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.8,(_f(41) & _f(42) & _f(35) & _f(40) & _f(21) => _f(49));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.7,(_f(41) & _f(42) & _f(35) & _f(39) & _f(47) => _f(48));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.6,(_f(41) & _f(42) & _f(35) & _f(39) & _f(38) & _f(19) => _f(45));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.5,(_f(41) & _f(42) & _f(35) & _f(39) & _f(38) & _f(36) & _f(17) => _f(46));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.4,(_f(41) & _f(42) & _f(35) & _f(39) & _f(37) & _f(19) => _f(45));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.3,(_f(41) & _f(42) & _f(35) & _f(39) & _f(37) & _f(36) & _f(17) => _f(44));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.2,(_f(41) & _f(42) & _f(35) & _f(15) => _f(43));
_f(1) & _f(2) & _f(5) & _f(6) & _f(32) & _f(33) & criar.1,(_f(41) & _f(42) & _f(7) & _f(13) => _f(14));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.11,(_f(8) & _f(12) & _f(11) & _f(21) => _f(31));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.10,(_f(8) & _f(12) & _f(11) & _f(21) => _f(30));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.9,(_f(8) & _f(12) & _f(11) & _f(21) => _f(29));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.8,(_f(8) & _f(12) & _f(21) & _f(27) => _f(28));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.7,(_f(8) & _f(12) & _f(21) & _f(25) => _f(26));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.6,(_f(8) & _f(12) & _f(21) & _f(23) => _f(24));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.5,(_f(8) & _f(12) & _f(21) => _f(22));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.4,(_f(8) & _f(10) & _f(19) => _f(20));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.3,(_f(8) & _f(10) & _f(9) & _f(17) => _f(18));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.2,(_f(8) & _f(15) => _f(16));
_f(1) & _f(2) & _f(5) & _f(6) & Initialisation.1,(_f(7) & _f(13) => _f(14));
_f(1) & _f(2) & ValuesLemmas.1,(_f(3) => _f(4))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..4)*{TIPOS}): FIN(NATURAL*{TIPOS}) & not(((1..4)*{TIPOS}) = {}) & ((1..3)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..3)*{STATUS}) = {}) & ((1..4)*{CORES}): FIN(NATURAL*{CORES}) & not(((1..4)*{CORES}) = {}) & ((MAX_INT) : ((NAT-{0}))) & ((MAX_INT) = (1000)) & ((MAX) = ({(((3|->TIPOS)) |-> (10))}\/{(((1|->TIPOS)) |-> (5))}\/{(((2|->TIPOS)) |-> (5))}\/{(((4|->TIPOS)) |-> (0))})) & MAX : ((1..4)*{TIPOS}) +-> ((0) .. (MAX_INT)) & dom(MAX) = ((1..4)*{TIPOS}) & ((MAX) : (((((1..4)*{TIPOS})) --> (((0) .. (MAX_INT)))))) & ((((MAX )((3|->TIPOS)) + (MAX )((1|->TIPOS))) + (MAX )((2|->TIPOS))) <= MAX_INT);
"Valuation is correct";
((1) .. (MAX_INT)): FIN(INTEGER) & not(((1) .. (MAX_INT)) = {});
VAGA: FIN(INTEGER) & not(VAGA = {});
((VAGA) = (((1) .. (MAX_INT))));
((jj) : (((1) .. (0))));
!(jj).(((((jj) : (((1) .. (ii$2))))) => ((((ativoI$2 )(jj)) = (FALSE)))));
((jj) : (((1) .. ((ii$2 + 1)))));
(ii$2 +1 <= MAX_INT);
((ii$4) : (((1) .. (MAX_INT))));
not((ii$2 +1 <= MAX_INT));
"Loop initialisation";
(((ativoI$1 )(jj)) = (FALSE));
"Loop variant is positive";
(0 <= (MAX_INT - ii$2));
"Loop invariant is preserved";
(((((ativoI$2) <+ ({(((ii$2 + 1)) |-> (FALSE))})) )(jj)) = (FALSE));
"Variant is decreasing";
((MAX_INT - (ii$2 + 1)) +1 <= (MAX_INT - ii$2));
"End of loop";
#(vv).(((vv) : (VAGA)));
"Check invariant ((statusI$1) : (((((1) .. (MAX_INT))) --> (STATUS))))";
((statusI$2) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS})))));
"Check invariant ((tipoI$1) : (((((1) .. (MAX_INT))) --> (TIPOS))))";
((tipoI$2) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS})))));
"Check invariant ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL))))";
((ativoI$2) : (((((1) .. (MAX_INT))) --> (BOOL))));
(((statusI$2 )(ii$4)) = (({} )(ii$4)));
(((tipoI$2 )(ii$4)) = (({} )(ii$4)));
((((ativoI$2 )(ii$4)) = (TRUE))  => ((ii$4) : ({}))) & (((ii$4) : ({})) => (((ativoI$2 )(ii$4)) = (TRUE)));
ids : ((1) .. (MAX_INT)) +-> VAGA & dom(ids) = ((1) .. (MAX_INT)) & ((ids) : (((((1) .. (MAX_INT))) --> (VAGA)))) & ((ran(((ids) |> (ativo)))) = (dom(status))) & ((ran(((ids) |> (ativo)))) = (dom(tipo))) & ativo : POW( VAGA) & ((ativo) = (dom(tipo))) & ((ativo) = (dom(status))) & ((status) : (((VAGA) +-> (((1..3)*{STATUS}))))) & ((tipo) : (((VAGA) +-> (((1..4)*{TIPOS}))))) & ((dom(status)) = (dom(tipo))) & (card(((tipo) |> ({(3|->TIPOS)}))) <= (MAX )((3|->TIPOS))) & (card(((tipo) |> ({(1|->TIPOS)}))) <= (MAX )((1|->TIPOS))) & (card(((tipo) |> ({(2|->TIPOS)}))) <= (MAX )((2|->TIPOS)));
statusI$1 : ((1) .. (MAX_INT)) +-> ((1..3)*{STATUS}) & dom(statusI$1) = ((1) .. (MAX_INT)) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & tipoI$1 : ((1) .. (MAX_INT)) +-> ((1..4)*{TIPOS}) & dom(tipoI$1) = ((1) .. (MAX_INT)) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ativoI$1 : ((1) .. (MAX_INT)) +-> BOOL & dom(ativoI$1) = ((1) .. (MAX_INT)) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE))))));
((tt) : (((1..4)*{TIPOS}))) & (card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
!(jj).(((((jj) : (((1) .. (ii$3))))) => ((((ativoI$2 )(jj)) = (FALSE)))));
((jj) : (((1) .. ((ii$3 + 1)))));
(((ativoI$2 )((ii$3 + 1))) = (FALSE));
not((((ativoI$2 )((ii$3 + 1))) = (FALSE)));
(ii$3 +1 <= MAX_INT);
not((ii$3 +1 <= MAX_INT));
((tt) : (((1..4)*{TIPOS})));
(card(((tipo) |> ({tt}))) +1 <= (MAX )(tt));
(0 <= (MAX_INT - ii$3));
(((((ativoI$2) <+ ({(((ii$3 + 1)) |-> (TRUE))})) )(jj)) = (FALSE));
((MAX_INT - (ii$3 + 1)) +1 <= (MAX_INT - ii$3));
(((ativoI$2 )(jj)) = (FALSE));
"Instruction Well Definess";
(((ii$3 + 1)) : (dom(ativoI$2)));
#(vv,ii$1).(((vv) : (VAGA)) & not(vv : ativo) & ((ii$1) : (dom(((ids) |>> (ativo))))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$2 )(ii)) = ((((status) <+ ({((vv) |-> ((1|->STATUS)))})) )(ii))) & (((tipoI$2 )(ii)) = ((((tipo) <+ ({((vv) |-> (tt))})) )(ii))) & ((((ativoI$2 )(ii)) = (TRUE))  => ((ii) : (((ativo) \/ ({vv}))))) & (((ii) : (((ativo) \/ ({vv})))) => (((ativoI$2 )(ii)) = (TRUE)))))));
((vv) : (ativo)) & ((vv) : (ativo)) & ((vv) : (VAGA)) & ((vv) : (dom(tipo))) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((ii) : (((1) .. (MAX_INT))));
((vv) : (ativo));
((vv) : (VAGA));
((vv) : (dom(tipo)));
((vv) : (dom(status)));
(((status )(vv)) = ((1|->STATUS)));
"Refinement is correct";
((((ativoI$1) <+ ({((vv) |-> (FALSE))}))) : (((((1) .. (MAX_INT))) --> (BOOL))));
(((statusI$1 )(ii)) = (((({vv}) <<| (status)) )(ii)));
(((tipoI$1 )(ii)) = (((({vv}) <<| (tipo)) )(ii)));
((((((ativoI$1) <+ ({((vv) |-> (FALSE))})) )(ii)) = (TRUE))  => ((ii) : ((ativo - {vv})))) & (((ii) : ((ativo - {vv}))) => (((((ativoI$1) <+ ({((vv) |-> (FALSE))})) )(ii)) = (TRUE)));
((vv) : (ativo)) & ((vv) : (ativo)) & ((vv) : (dom(status))) & (((status )(vv)) = ((1|->STATUS)));
((((statusI$1) <+ ({((vv) |-> ((2|->STATUS)))}))) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS})))));
(((((statusI$1) <+ ({((vv) |-> ((2|->STATUS)))})) )(ii)) = ((((status) <+ ({((vv) |-> ((2|->STATUS)))})) )(ii)));
(((tipoI$1 )(ii)) = ((tipo )(ii)));
((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)));
((vv) : (ativo)) & ((vv) : (ativo)) & ((vv) : (dom(status))) & (((status )(vv)) = ((2|->STATUS)));
(((status )(vv)) = ((2|->STATUS)));
((((statusI$1) <+ ({((vv) |-> ((1|->STATUS)))}))) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS})))));
(((((statusI$1) <+ ({((vv) |-> ((1|->STATUS)))})) )(ii)) = ((((status) <+ ({((vv) |-> ((1|->STATUS)))})) )(ii)));
((vv) : (ativo)) & ((vv) : (ativo)) & ((vv) : (dom(status))) & ((vv) : (dom(tipo))) & ((cc) : (((1..4)*{CORES})));
((cc$1) = (cc));
not((((status )(vv)) = ((1|->STATUS))));
(((tipoI$1 )(vv)) = ((1|->TIPOS)));
(((tipoI$1 )(vv)) = ((2|->TIPOS)));
not((((tipoI$1 )(vv)) = ((1|->TIPOS))));
not((((tipoI$1 )(vv)) = ((2|->TIPOS))));
(((statusI$1 )(vv)) = ((1|->STATUS)));
not((((statusI$1 )(vv)) = ((1|->STATUS))));
((cc) : (((1..4)*{CORES})));
((((tipo )(vv)) = ((1|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((1|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((1|->CORES)) = ((2|->CORES))));
(((1|->CORES)) = ((4|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((2|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((2|->CORES)) = ((2|->CORES))));
(((2|->CORES)) = ((4|->CORES)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((3|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((3|->CORES)) = ((2|->CORES))));
(((3|->CORES)) = ((4|->CORES)));
((vv) : (dom(tipoI$1)));
((((tipo )(vv)) = ((1|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((4|->CORES)) = ((1|->CORES)))) or ((((tipo )(vv)) = ((2|->TIPOS))) & ((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS}))))) & ((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS}))))) & ((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL)))) & !(ii).(((((ii) : (((1) .. (MAX_INT))))) => ((((statusI$1 )(ii)) = ((status )(ii))) & (((tipoI$1 )(ii)) = ((tipo )(ii))) & ((((ativoI$1 )(ii)) = (TRUE))  => ((ii) : (ativo))) & (((ii) : (ativo)) => (((ativoI$1 )(ii)) = (TRUE)))))) & (((4|->CORES)) = ((2|->CORES))));
((vv) : (dom(statusI$1)));
((vv) : (ativo)) & ((vv) : (ativo)) & ((vv) : (dom(tipo))) & ((tt) : (((1..4)*{TIPOS})));
((tt$1) = (tt));
(((tipoI$1 )(vv)) = ((tipo )(vv)));
((qc) : (NAT)) & ((oc) : (NAT)) & ((qi) : (NAT)) & ((oi) : (NAT)) & ((qd) : (NAT)) & ((od) : (NAT));
((qc$1) = (qc)) & ((oc$1) = (oc)) & ((qi$1) = (qi)) & ((oi$1) = (oi)) & ((qd$1) = (qd)) & ((od$1) = (od));
((qc) : (NAT));
((oc) : (NAT));
((qi) : (NAT));
((oi) : (NAT));
((qd) : (NAT));
((od) : (NAT));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & ((zz) : (ativo)) | 1)));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((3|->TIPOS))) & ((zz) : (ativo)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & ((zz) : (ativo)) | 1)));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((1|->TIPOS))) & ((zz) : (ativo)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & ((zz) : (ativo)) | 1)));
((0) = (SIGMA(zz).(((zz) : (dom(tipo))) & (((tipo )(zz)) = ((2|->TIPOS))) & ((zz) : (ativo)) & ((zz) : (dom(status))) & (((status )(zz)) = ((2|->STATUS))) | 1)));
((vv) : (VAGA)) & ((tt) : (((1..4)*{TIPOS}))) & (0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((vv$1) = (vv));
(0 +1 <= card(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)}))));
((0) : (dom(((((dom(((tipo) |> ({tt})))) <| (status))) |> ({(1|->STATUS)})))));
((0) : (ativo));
(((statusI$1 )(ii)) = ((status )(ii)));
ativoI$1 : ((1) .. (MAX_INT)) +-> BOOL;
dom(ativoI$1) = ((1) .. (MAX_INT));
((ativoI$1) : (((((1) .. (MAX_INT))) --> (BOOL))));
tipoI$1 : ((1) .. (MAX_INT)) +-> ((1..4)*{TIPOS});
dom(tipoI$1) = ((1) .. (MAX_INT));
((tipoI$1) : (((((1) .. (MAX_INT))) --> (((1..4)*{TIPOS})))));
statusI$1 : ((1) .. (MAX_INT)) +-> ((1..3)*{STATUS});
dom(statusI$1) = ((1) .. (MAX_INT));
((statusI$1) : (((((1) .. (MAX_INT))) --> (((1..3)*{STATUS})))));
"Well definedness";
((ii) : (dom(statusI$1)));
((statusI$1) : (((dom(statusI$1)) +-> (ran(statusI$1)))));
((ii) : (dom(status)));
((status) : (((dom(status)) +-> (ran(status)))));
((ii) : (dom(tipoI$1)));
((tipoI$1) : (((dom(tipoI$1)) +-> (ran(tipoI$1)))));
((ii) : (dom(tipo)));
((tipo) : (((dom(tipo)) +-> (ran(tipo)))));
((ii) : (dom(ativoI$1)));
((ativoI$1) : (((dom(ativoI$1)) +-> (ran(ativoI$1)))));
!(jj).(((((jj) : (((1) .. (0))))) => ((((ativoI$1 )(jj)) = (FALSE)))));
((jj) : (dom(ativoI$1)));
(((ativoI$1 )((0 + 1))) = (FALSE));
not((((ativoI$1 )((0 + 1))) = (FALSE)));
(((0 + 1)) : (dom(ativoI$1)))
END
&
THEORY EnumerateX IS
CORES == {azul,amarela,verde,vermelha};
STATUS == {livre,ocupada,S_NULL};
TIPOS == {idoso,deficiente,comum,T_NULL}
END
