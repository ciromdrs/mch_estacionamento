/* EstacionamentoI
 * Author: Saul
 * Creation date: 26/10/2016
 */

IMPLEMENTATION EstacionamentoI
REFINES EstacionamentoR

VALUES
    VAGA = 1..MAX_INT

SEES TiposComuns

CONCRETE_VARIABLES
    tipoI,
    statusI,
    ativo
    
INVARIANT
    tipoI   : VAGA --> TIPOS  &
    statusI : VAGA --> STATUS &
    
    dom(dom((ativo |> {TRUE})) <|tipoI) = dom(dom((ativo |> {TRUE})) <| statusI)

INITIALISATION
    tipoI   := VAGA * {T_NULL};
    statusI := VAGA * {S_NULL};
    ativo   := VAGA * {FALSE}

OPERATIONS
    // Controle de vagas
    criar(tt) =
        BEGIN
            VAR ii, continuar IN
                ii := 0;
                continuar := TRUE;
                WHILE ii < MAX_INT & continuar = TRUE DO
                    ii := ii + 1;
                    IF ativo(ii) = FALSE THEN
                        continuar   := FALSE;
                        ativo(ii)   := TRUE;
                        tipoI(ii)   := tt;
                        statusI(ii) := livre
                    END
                INVARIANT !vv.(vv : 1..ii => ativo(vv) = TRUE)
                VARIANT MAX_INT - ii
                END
            END
        END;
    
    excluir(vv) =
        BEGIN
            ativo(vv) := FALSE
        END;
    
    // Ocupação e liberação de vagas
    ocupar(vv) =
        BEGIN
            statusI(vv) := ocupada
        END;
        
    liberar(vv) =
        BEGIN
            statusI(vv) := livre
        END;
    
    // Consultas
    cc <-- get_cor_lampada(vv) =
        BEGIN
            IF statusI(vv) = livre THEN
                CASE tipoI(vv) OF EITHER idoso THEN
                    cc := azul
                OR deficiente THEN
                    cc := amarela
                ELSE // comum
                    cc := verde
                END
                END
            ELSE // status(vv) = ocupada
                cc := vermelha
            END
        END;
    
    tt <-- get_tipo_vaga(vv) =
        BEGIN
            tt := tipoI(vv)
        END;
    
    /* qc: Quantidade de vagas Comuns
       oc: quantidade de vagas Ocupadas Comuns
       as demais são análogas para deficientes e idosos.
    */
    qc, oc, qi, oi, qd, od <-- get_info_painel = 
        BEGIN
            qc, oc, qi, oi, qd, od := 0, 0, 0, 0, 0, 0;
            VAR ii IN
                ii := 1;
                WHILE ii <= MAX_INT DO
                    IF ativo(ii) = TRUE THEN
                            CASE tipoI(ii) OF EITHER idoso THEN
                                qi := qi + 1;
                                IF statusI(ii) = ocupada THEN
                                    oi := oi + 1
                                END
                            OR deficiente THEN
                                qd := qd + 1;
                                IF statusI(ii) = ocupada THEN
                                    od := od + 1
                                END
                            ELSE // comum
                                qc := qc + 1;
                                IF statusI(ii) = ocupada THEN
                                    oc := oc + 1
                                END
                           END
                    END
                    END
                INVARIANT ii <= MAX_INT //esse invariant tá certo?
                VARIANT MAX_INT - ii
                END
            END
        END;
    
    vv <-- indicar(tt) = 
        VAR ii IN
            ii := 1;
            vv := 0;
            WHILE ii <= MAX_INT DO
                IF ativo(ii) = TRUE & statusI(ii) = livre & tipoI(ii) = tt THEN
                    vv := ii
                END;
                ii := ii + 1
            INVARIANT ii <= MAX_INT //esse invariant tá certo?
            VARIANT MAX_INT - ii
            END
        END
END